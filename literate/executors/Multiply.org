#+TITLE: Multiply Executor service
#+PROPERTY: header-args    :comments both :tangle ../../src/executors/multiply.js

Executors must be XState services and for this one we've chosen the callback type of service.

#+begin_src js
import { ValueBlock } from "concrete-parser";
#+end_src

There is no type checking. Like in JS, we just assume the user did everything right.

#+begin_src js
export const service = (C) => (sendParent, receiveParent) => {
    const [ first, ...rest ] = C.activeFrame.arguments;

    if (! first) throw new Error("Multiply requires at least one argument, got zero");
    
    const result = rest.reduce(
        (memo, block) => memo * block.asJS(), first.asJS());
    const block = ValueBlock.fromJS(result);
    sendParent({ type: "PLACE_OP_RESULT", block });
    sendParent("DONE");
};
#+end_src
